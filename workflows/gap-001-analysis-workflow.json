{
  "name": "GAP-001: Análisis de Sanitización de Entradas en Agentes",
  "description": "Workflow para analizar el estado actual de sanitización de entradas en todos los agentes",
  "steps": [
    {
      "step_id": "analizar_agentes_entradas",
      "agent": "context",
      "input": {
        "sources": [
          "agents/context/agent.js",
          "agents/prompting/agent.js",
          "agents/rules/agent.js",
          "agents/security/agent.js",
          "agents/metrics/agent.js",
          "agents/optimization/agent.js",
          "agents/docsync/agent.js",
          "agents/lint/agent.js",
          "agents/orchestrator/agent.js",
          "agents/refactor/agent.js",
          "agents/secscan/agent.js",
          "agents/tests/agent.js"
        ],
        "selectors": [
          "input",
          "payload",
          "request",
          "data",
          "sanitiz",
          "valid",
          "escape",
          "clean",
          "filter",
          "trim",
          "parse",
          "JSON.parse",
          "eval",
          "exec"
        ],
        "max_tokens": 4000
      }
    },
    {
      "step_id": "generar_plan_sanitizacion",
      "agent": "prompting",
      "depends_on": ["analizar_agentes_entradas"],
      "input": {
        "goal": "Crear plan detallado de implementación de sanitización de entradas en agentes",
        "context": "{{analizar_agentes_entradas.output.context_bundle}}",
        "style": "technical",
        "constraints": [
          "Implementar sanitización en TODOS los agentes",
          "Validar tipos de datos de entrada",
          "Escape de caracteres peligrosos",
          "Validación de estructura JSON",
          "Prevenir inyección de código",
          "Mantener funcionalidad existente"
        ]
      }
    },
    {
      "step_id": "validar_plan_seguridad",
      "agent": "rules",
      "depends_on": ["generar_plan_sanitizacion"],
      "input": {
        "policy_refs": [
          "SECURITY.md",
          "docs/security-policies.md"
        ],
        "compliance_level": "strict",
        "code": "{{generar_plan_sanitizacion.output.system_prompt}}",
        "rules": [
          "Todas las entradas deben ser sanitizadas",
          "No usar eval() o exec() con datos de entrada",
          "Validar estructura de JSON antes de parsear",
          "Escape de caracteres especiales",
          "Implementar whitelist de tipos de datos permitidos"
        ]
      }
    }
  ]
}
