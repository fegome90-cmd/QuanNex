name: Canary Nightly
on:
  schedule: 
    - cron: "0 3 * * *"  # 03:00 UTC diario
  workflow_dispatch:

jobs:
  canary:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with: 
          node-version: 20
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci

      # 1) Detección y verify
      - name: Detect profile & plan
        run: |
          node src/workflow/route.mjs | tee artifacts/canary-detect.json
          
      - name: Verify (baseline)
        id: verify_base
        run: |
          set +e
          npm run verify
          echo "status=$?" >> $GITHUB_OUTPUT
          exit 0

      # 2) Si rojo → autofix dry→apply → verify
      - name: Autofix (dry run)
        if: steps.verify_base.outputs.status != '0'
        run: |
          node scripts/autofix.mjs '{"actions":[{"type":"install_missing_dep","name":"supertest","dev":true}],"dryRun":true,"branch":"autofix/canary"}' | tee artifacts/autofix-dry.json
          
      - name: Autofix (apply in branch)
        if: steps.verify_base.outputs.status != '0'
        run: |
          node scripts/autofix.mjs '{"actions":[{"type":"install_missing_dep","name":"supertest","dev":true}],"dryRun":false,"branch":"autofix/canary"}' | tee artifacts/autofix-apply.json
          
      - name: Verify (post-apply)
        if: steps.verify_base.outputs.status != '0'
        run: npm run verify

      # 3) Gates operativos finales
      - name: Gates
        run: |
          npm run gate:workflow
          npm run gate:policy
          npm run gate:diff
          npm run gate:dirty

      # 4) Publicar artefactos y SARIF si hay
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: canary-artifacts
          path: |
            artifacts/**/*.json
            artifacts/**/*.sarif
          if-no-files-found: ignore

      # 5) Upload SARIF to GitHub Security
      - name: Upload SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: artifacts/policy-check.sarif
          category: policy-check
        continue-on-error: true

      # 6) Report canary results
      - name: Report canary results
        if: always()
        run: |
          echo "## 🚀 Canary Nightly Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Baseline Status:** ${{ steps.verify_base.outputs.status == '0' && '✅ PASS' || '❌ FAIL' }}" >> $GITHUB_STEP_SUMMARY
          echo "**AutoFix Applied:** ${{ steps.verify_base.outputs.status != '0' && '✅ YES' || '⏭️ SKIPPED' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Artifacts:**" >> $GITHUB_STEP_SUMMARY
          echo "- Detection: \`artifacts/canary-detect.json\`" >> $GITHUB_STEP_SUMMARY
          if [ -f "artifacts/autofix-dry.json" ]; then
            echo "- AutoFix Dry: \`artifacts/autofix-dry.json\`" >> $GITHUB_STEP_SUMMARY
          fi
          if [ -f "artifacts/autofix-apply.json" ]; then
            echo "- AutoFix Apply: \`artifacts/autofix-apply.json\`" >> $GITHUB_STEP_SUMMARY
          fi
          if [ -f "artifacts/policy-check.sarif" ]; then
            echo "- SARIF: \`artifacts/policy-check.sarif\`" >> $GITHUB_STEP_SUMMARY
          fi
