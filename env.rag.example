# =====================================================
# Configuración del Sistema RAG
# =====================================================
# Copia este archivo a .env y completa con tus valores reales

# =====================================================
# BASE DEL SISTEMA
# =====================================================

# Node.js y gestores de paquetes
NODE_VERSION=24.9.0
NPM_VERSION=11.6.0
PNPM_VERSION=latest

# Python
PYTHON_VERSION=3.13.7
PYTHON_VENV_PATH=./venv-rag

# =====================================================
# DATASTORES Y COLAS
# =====================================================

# PostgreSQL con pgvector
PG_HOST=localhost
PG_PORT=5432
PG_USER=rag_user
PG_PASSWORD=rag_password
PG_DB=rag_db
PG_URL=postgresql://${PG_USER}:${PG_PASSWORD}@${PG_HOST}:${PG_PORT}/${PG_DB}

# Qdrant Vector Database
QDRANT_HOST=localhost
QDRANT_PORT=6333
QDRANT_GRPC_PORT=6334
QDRANT_URL=http://${QDRANT_HOST}:${QDRANT_PORT}
QDRANT_API_KEY=

# Redis para cache y colas
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}

# =====================================================
# PIPELINE RAG (INGESTA/PARSING/CHUNKING)
# =====================================================

# Text Embeddings Inference (TEI)
TEI_HOST=localhost
TEI_PORT=8080
TEI_URL=http://${TEI_HOST}:${TEI_PORT}
TEI_MODEL_ID=BAAI/bge-small-en-v1.5
TEI_MAX_CONCURRENT_REQUESTS=10

# =====================================================
# EMBEDDINGS (ELIGE 1 PRINCIPAL + 1 RESPALDO)
# =====================================================

# OpenAI (SaaS - Principal)
OPENAI_API_KEY=
OPENAI_EMBEDDING_MODEL=text-embedding-3-small
OPENAI_EMBEDDING_DIMENSION=1536
OPENAI_BATCH_SIZE=100
OPENAI_TIMEOUT=30000

# VoyageAI (SaaS - Respaldo)
VOYAGE_API_KEY=
VOYAGE_MODEL=voyage-multilingual-2
VOYAGE_DIMENSION=1024

# Local/Self-host (Respaldo)
LOCAL_EMBEDDING_URL=${TEI_URL}
LOCAL_EMBEDDING_MODEL=${TEI_MODEL_ID}

# =====================================================
# RERANKING (RECOMENDADO)
# =====================================================

# Cohere (SaaS)
COHERE_API_KEY=
COHERE_RERANK_MODEL=rerank-3
COHERE_MAX_RESULTS=50

# Jina (SaaS - Alternativa)
JINA_API_KEY=
JINA_RERANK_MODEL=reranker-v2-base-multilingual

# =====================================================
# LLMs PARA INFERENCIA
# =====================================================

# Razonamiento/Crítico (caro, para pasos complejos)
OPENAI_GPT4_MODEL=gpt-4o
ANTHROPIC_CLAUDE_MODEL=claude-3-5-sonnet-20241022
GOOGLE_GEMINI_MODEL=gemini-2.0-flash-exp

# General/Barato (daily ops, guardrails, re-intentos)
OPENAI_GPT4_MINI_MODEL=gpt-4o-mini
ANTHROPIC_CLAUDE_HAIKU_MODEL=claude-3-haiku-20240307

# =====================================================
# GUARDRAILS Y SEGURIDAD
# =====================================================

# Open Policy Agent (OPA)
OPA_URL=http://localhost:8181
OPA_BUNDLE_PATH=./policies/bundle_v1.tar.gz

# PII Detection
PII_DETECTION_ENABLED=true
PII_DETECTION_MODEL=microsoft/presidio-analyzer

# =====================================================
# OBSERVABILIDAD Y ALERTAS
# =====================================================

# Prometheus
PROMETHEUS_HOST=localhost
PROMETHEUS_PORT=9090
PROMETHEUS_URL=http://${PROMETHEUS_HOST}:${PROMETHEUS_PORT}

# Grafana
GRAFANA_HOST=localhost
GRAFANA_PORT=3000
GRAFANA_URL=http://${GRAFANA_HOST}:${GRAFANA_PORT}
GRAFANA_USER=admin
GRAFANA_PASSWORD=admin

# Alertmanager
ALERTMANAGER_HOST=localhost
ALERTMANAGER_PORT=9093
ALERTMANAGER_URL=http://${ALERTMANAGER_HOST}:${ALERTMANAGER_PORT}

# Node Exporter
NODE_EXPORTER_PORT=9100

# PostgreSQL Exporter
POSTGRES_EXPORTER_PORT=9187

# =====================================================
# CONFIGURACIÓN DE RAG
# =====================================================

# Chunking
RAG_CHUNK_SIZE=512
RAG_CHUNK_OVERLAP=50
RAG_MIN_CHUNK_SIZE=50
RAG_MAX_CHUNK_SIZE=1024

# Retrieval
RAG_K=12
RAG_RERANK_K=5
RAG_MIN_CONFIDENCE=0.7
RAG_MAX_QUERY_LENGTH=2000

# Cache
RAG_CACHE_TTL=3600
RAG_CACHE_MAX_SIZE=1000

# Rate Limits
RAG_QUERIES_PER_MINUTE=60
RAG_EMBEDDINGS_PER_MINUTE=120

# =====================================================
# TELEMETRÍA Y MÉTRICAS
# =====================================================

TELEMETRY_LEVEL=info
METRICS_ENABLED=true
METRICS_PORT=3000
METRICS_PATH=/metrics

# Logging
LOG_LEVEL=info
LOG_FORMAT=json
LOG_INCLUDE_STACK=true

# =====================================================
# TASKDB INTEGRATION
# =====================================================

# TaskDB configuración (usando la existente)
TASKDB_DRIVER=dual
TASKDB_DUAL_STRICT=false

# =====================================================
# CONFIGURACIÓN DE DESARROLLO
# =====================================================

# Modo de desarrollo
NODE_ENV=development
DEBUG=rag:*

# Timeouts
DEFAULT_TIMEOUT=30000
EMBEDDING_TIMEOUT=60000
RERANK_TIMEOUT=30000

# =====================================================
# NOTAS DE INSTALACIÓN
# =====================================================

# 1. Copia este archivo a .env
# 2. Completa las API keys necesarias
# 3. Ajusta los puertos si hay conflictos
# 4. Ejecuta: docker-compose -f docker-compose.rag.yml up -d
# 5. Ejecuta: source venv-rag/bin/activate
# 6. Ejecuta: npm install
