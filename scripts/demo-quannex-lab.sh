#!/bin/bash
# Demo del Laboratorio Quannex Docker
# Demuestra el flujo completo de calibraci√≥n del Context Agent

set -euo pipefail

# Colores
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

PROJECT_ROOT="/Users/felipe/Developer/startkit-main"

log() {
    echo -e "${BLUE}[QUANNEX-LAB]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Verificar que estamos en el directorio correcto
cd "$PROJECT_ROOT"

# Banner de demostraci√≥n
showDemoBanner() {
    echo ""
    echo "üöÄ =============================================== üöÄ"
    echo "   QUANNEX CONTEXT AGENT - LABORATORIO DOCKER"
    echo "üöÄ =============================================== üöÄ"
    echo ""
    echo "üéØ DEMOSTRACI√ìN COMPLETA DE CALIBRACI√ìN"
    echo "   Este demo muestra el flujo completo de optimizaci√≥n"
    echo ""
    echo "üìã PROCESO DE DEMOSTRACI√ìN:"
    echo "   1Ô∏è‚É£ Construir imagen Docker del Context Agent"
    echo "   2Ô∏è‚É£ Levantar servicio con configuraci√≥n baseline"
    echo "   3Ô∏è‚É£ Ejecutar benchmark de carga (60s)"
    echo "   4Ô∏è‚É£ Analizar m√©tricas con Gate 14 anti-simulaci√≥n"
    echo "   5Ô∏è‚É£ Aplicar configuraci√≥n agresiva"
    echo "   6Ô∏è‚É£ Repetir benchmark y comparar resultados"
    echo "   7Ô∏è‚É£ Mostrar palancas de rendimiento disponibles"
    echo ""
    echo "‚è≥ Duraci√≥n estimada: 5-10 minutos"
    echo ""
}

# Funci√≥n para ejecutar demo completo
executeDemo() {
    log "Iniciando demostraci√≥n del laboratorio Quannex..."
    
    # Mostrar banner
    showDemoBanner
    
    # 1. Construir imagen
    log "PASO 1: Construyendo imagen Docker del Context Agent..."
    if make -f Makefile.quannex context-build; then
        success "Imagen construida exitosamente"
    else
        error "Fallo en construcci√≥n de imagen"
        return 1
    fi
    
    # 2. Levantar servicio
    log "PASO 2: Levantando servicio Context Agent..."
    if make -f Makefile.quannex context-up; then
        success "Servicio levantado en puerto 8601"
    else
        error "Fallo al levantar servicio"
        return 1
    fi
    
    # Esperar que el servicio est√© listo
    log "Esperando que el servicio est√© listo..."
    sleep 5
    
    # Verificar salud
    log "Verificando salud del servicio..."
    if make -f Makefile.quannex context-health > /dev/null 2>&1; then
        success "Servicio saludable"
    else
        warning "Servicio puede no estar completamente listo, continuando..."
    fi
    
    # 3. Benchmark baseline
    log "PASO 3: Ejecutando benchmark baseline (60s, 50 RPS, 24 concurrencia)..."
    if make -f Makefile.quannex context-bench; then
        success "Benchmark baseline completado"
    else
        error "Fallo en benchmark baseline"
        return 1
    fi
    
    # 4. Analizar m√©tricas baseline
    log "PASO 4: Analizando m√©tricas baseline con Gate 14..."
    if make -f Makefile.quannex context-analyze; then
        success "An√°lisis baseline completado"
    else
        error "Fallo en an√°lisis baseline"
        return 1
    fi
    
    # Mostrar resultados baseline
    echo ""
    echo "üìä RESULTADOS BASELINE:"
    echo "   Archivo: logs/context-bench.jsonl"
    echo "   An√°lisis: logs/context-bench-analysis.json"
    echo ""
    
    # 5. Configuraci√≥n agresiva
    log "PASO 5: Aplicando configuraci√≥n agresiva..."
    if make -f Makefile.quannex context-tune-aggr; then
        success "Configuraci√≥n agresiva aplicada"
    else
        error "Fallo al aplicar configuraci√≥n agresiva"
        return 1
    fi
    
    # Esperar que se aplique la configuraci√≥n
    sleep 3
    
    # 6. Benchmark agresivo
    log "PASO 6: Ejecutando benchmark con configuraci√≥n agresiva..."
    if make -f Makefile.quannex context-bench; then
        success "Benchmark agresivo completado"
    else
        error "Fallo en benchmark agresivo"
        return 1
    fi
    
    # 7. Analizar m√©tricas agresivas
    log "PASO 7: Analizando m√©tricas con configuraci√≥n agresiva..."
    if make -f Makefile.quannex context-analyze; then
        success "An√°lisis agresivo completado"
    else
        error "Fallo en an√°lisis agresivo"
        return 1
    fi
    
    # Mostrar informaci√≥n del laboratorio
    log "PASO 8: Mostrando informaci√≥n del laboratorio..."
    make -f Makefile.quannex context-info
    
    # Resumen final
    echo ""
    echo "‚úÖ =============================================== ‚úÖ"
    echo "   DEMOSTRACI√ìN COMPLETADA EXITOSAMENTE"
    echo "‚úÖ =============================================== ‚úÖ"
    echo ""
    echo "üéØ RESULTADOS DEL LABORATORIO:"
    echo "   ‚úÖ Imagen Docker construida y funcionando"
    echo "   ‚úÖ Servicio Context Agent operativo"
    echo "   ‚úÖ Benchmarks ejecutados (baseline + agresivo)"
    echo "   ‚úÖ An√°lisis con Gate 14 anti-simulaci√≥n completado"
    echo "   ‚úÖ Palancas de rendimiento documentadas"
    echo ""
    echo "üìÅ ARCHIVOS GENERADOS:"
    echo "   üìä logs/context-bench.jsonl - Datos crudos de benchmark"
    echo "   üìà logs/context-bench-analysis.json - An√°lisis estad√≠stico"
    echo "   üîê logs/context-bench.jsonl.hash - Hash de integridad"
    echo "   üìö docs/quannex-performance-knobs.md - Documentaci√≥n completa"
    echo ""
    echo "üöÄ PR√ìXIMOS PASOS:"
    echo "   1. Revisar m√©tricas en logs/context-bench-analysis.json"
    echo "   2. Ajustar palancas seg√∫n resultados"
    echo "   3. Documentar configuraci√≥n √≥ptima"
    echo "   4. Clonar preset ganador a Vast"
    echo ""
    echo "üí° COMANDOS √öTILES:"
    echo "   make -f Makefile.quannex context-logs    # Ver logs en tiempo real"
    echo "   make -f Makefile.quannex context-health   # Verificar salud"
    echo "   make -f Makefile.quannex context-clean   # Limpiar artefactos"
    echo ""
    
    return 0
}

# Funci√≥n para mostrar ayuda
showHelp() {
    echo "=== QUANNEX LABORATORIO DOCKER - DEMO ==="
    echo ""
    echo "üéØ FUNCI√ìN:"
    echo "   Demuestra el flujo completo de calibraci√≥n del Context Agent"
    echo "   usando Docker con benchmarks y an√°lisis de m√©tricas"
    echo ""
    echo "üöÄ USO:"
    echo "   ./scripts/demo-quannex-lab.sh          # Ejecutar demo completo"
    echo "   ./scripts/demo-quannex-lab.sh help     # Mostrar ayuda"
    echo ""
    echo "üìã PROCESO DEL DEMO:"
    echo "   1. Construir imagen Docker del Context Agent"
    echo "   2. Levantar servicio con configuraci√≥n baseline"
    echo "   3. Ejecutar benchmark de carga (60s)"
    echo "   4. Analizar m√©tricas con Gate 14 anti-simulaci√≥n"
    echo "   5. Aplicar configuraci√≥n agresiva"
    echo "   6. Repetir benchmark y comparar resultados"
    echo "   7. Mostrar palancas de rendimiento disponibles"
    echo ""
    echo "üéØ RESULTADO:"
    echo "   Laboratorio Docker completamente funcional"
    echo "   con datos de benchmark y an√°lisis de rendimiento"
    echo ""
}

# Funci√≥n principal
main() {
    local command="${1:-execute}"
    
    case "$command" in
        "execute"|"demo")
            executeDemo
            ;;
        "help"|*)
            showHelp
            ;;
    esac
}

# Ejecutar funci√≥n principal
main "$@"
