#!/usr/bin/env bash
# Auto Initialize Cursor - Script que se ejecuta autom√°ticamente al iniciar MCP
# Obliga a Cursor a leer manual y contexto para entrar en caliente

set -euo pipefail

# Colores
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

PROJECT_ROOT="/Users/felipe/Developer/startkit-main"

log() {
    echo -e "${BLUE}[AUTO-INITIALIZE]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Verificar que estamos en el directorio correcto
cd "$PROJECT_ROOT"

# Funci√≥n para mostrar el banner de inicializaci√≥n
showInitializationBanner() {
    echo ""
    echo "üöÄ =============================================== üöÄ"
    echo "   QUANNEX STARTKIT - INICIALIZACI√ìN AUTOM√ÅTICA"
    echo "üöÄ =============================================== üöÄ"
    echo ""
    echo "üéØ CURSOR VA A ENTRAR EN CALIENTE AUTOM√ÅTICAMENTE"
    echo "   Esto puede tomar unos minutos la primera vez..."
    echo ""
    echo "üìã PROCESO DE INICIALIZACI√ìN:"
    echo "   1Ô∏è‚É£ Leyendo manual completo del proyecto"
    echo "   2Ô∏è‚É£ Leyendo contexto de ingeniero senior"
    echo "   3Ô∏è‚É£ Verificando estado del sistema"
    echo "   4Ô∏è‚É£ Confirmando inicializaci√≥n completa"
    echo ""
    echo "‚è≥ Por favor, espera mientras se completa la inicializaci√≥n..."
    echo ""
}

# Funci√≥n para ejecutar inicializaci√≥n autom√°tica
executeAutoInitialization() {
    log "Iniciando inicializaci√≥n autom√°tica de Cursor..."
    
    # Mostrar banner
    showInitializationBanner
    
    # Verificar que el script de inicializaci√≥n real existe
    if [[ ! -f "scripts/real-initialization-contract.sh" ]]; then
        error "Script de inicializaci√≥n real no encontrado"
        return 1
    fi
    
    # Ejecutar contrato de inicializaci√≥n REAL
    log "Ejecutando contrato de inicializaci√≥n REAL..."
    log "Este script mostrar√° el manual completo y contexto de ingeniero senior"
    log "Y solicitar√° acknowledgments reales para confirmar la lectura"
    
    # Ejecutar script de inicializaci√≥n real
    local result=$(bash scripts/real-initialization-contract.sh)
    
    if [[ $? -eq 0 ]]; then
        success "Inicializaci√≥n autom√°tica completada exitosamente"
        echo ""
        echo "‚úÖ =============================================== ‚úÖ"
        echo "   CURSOR EST√Å AHORA EN CALIENTE Y LISTO"
        echo "‚úÖ =============================================== ‚úÖ"
        echo ""
        echo "üéØ BENEFICIOS DE LA INICIALIZACI√ìN REAL:"
        echo "   ‚úÖ Manual completo le√≠do y procesado REALMENTE"
        echo "   ‚úÖ Contexto de ingeniero senior le√≠do y procesado REALMENTE"
        echo "   ‚úÖ Acknowledgments reales recibidos y validados"
        echo "   ‚úÖ Estado del sistema verificado"
        echo "   ‚úÖ Cursor listo para trabajar inmediatamente"
        echo ""
        echo "üöÄ PUEDES EMPEZAR A TRABAJAR AHORA MISMO"
        echo "   No necesitas copiar y pegar contextos manualmente"
        echo "   El contrato se cumpli√≥ REALMENTE esta vez"
        echo ""
        return 0
    else
        error "Inicializaci√≥n autom√°tica fall√≥"
        echo ""
        echo "‚ùå =============================================== ‚ùå"
        echo "   INICIALIZACI√ìN AUTOM√ÅTICA FALL√ì"
        echo "‚ùå =============================================== ‚ùå"
        echo ""
        echo "üîÑ FALLBACK MANUAL REQUERIDO:"
        echo "   1. Lee MANUAL-COMPLETO-CURSOR.md manualmente"
        echo "   2. Lee CONTEXTO-INGENIERO-SENIOR.md manualmente"
        echo "   3. Verifica el sistema con: ./context-manager.sh status"
        echo ""
        return 1
    fi
}

# Funci√≥n para verificar si ya se complet√≥ la inicializaci√≥n
checkInitializationStatus() {
    local statusFile="$PROJECT_ROOT/.cursor-initialization-status.json"
    if [[ -f "$statusFile" ]]; then
        local status=$(cat "$statusFile" | grep -o '"completed": true' || echo "")
        if [[ -n "$status" ]]; then
            local sessionId=$(cat "$statusFile" | grep -o '"session_id": "[^"]*"' | cut -d'"' -f4)
            local completedAt=$(cat "$statusFile" | grep -o '"completed_at": "[^"]*"' | cut -d'"' -f4)
            echo "‚úÖ Inicializaci√≥n ya completada"
            echo "   Sesi√≥n: $sessionId"
            echo "   Completada: $completedAt"
            return 0
        fi
    fi
    return 1
}

# Funci√≥n para mostrar ayuda
showHelp() {
    echo "=== AUTO INITIALIZE CURSOR - INICIALIZACI√ìN AUTOM√ÅTICA ==="
    echo ""
    echo "üéØ FUNCI√ìN:"
    echo "   Obliga a Cursor a leer manual y contexto autom√°ticamente"
    echo "   para entrar en caliente desde el primer momento"
    echo ""
    echo "üöÄ USO:"
    echo "   ./scripts/auto-initialize-cursor.sh          # Ejecutar inicializaci√≥n"
    echo "   ./scripts/auto-initialize-cursor.sh check    # Verificar estado"
    echo "   ./scripts/auto-initialize-cursor.sh reset    # Resetear inicializaci√≥n"
    echo "   ./scripts/auto-initialize-cursor.sh help     # Mostrar ayuda"
    echo ""
    echo "üìã PROCESO:"
    echo "   1. Lee MANUAL-COMPLETO-CURSOR.md completamente"
    echo "   2. Lee CONTEXTO-INGENIERO-SENIOR.md completamente"
    echo "   3. Verifica estado del sistema"
    echo "   4. Confirma inicializaci√≥n completa"
    echo ""
    echo "üéØ RESULTADO:"
    echo "   Cursor entra en caliente autom√°ticamente"
    echo "   No necesitas copiar y pegar contextos manualmente"
    echo ""
}

# Funci√≥n para resetear inicializaci√≥n
resetInitialization() {
    log "Reseteando estado de inicializaci√≥n..."
    
    local statusFile="$PROJECT_ROOT/.cursor-initialization-status.json"
    if [[ -f "$statusFile" ]]; then
        rm "$statusFile"
        success "Estado de inicializaci√≥n reseteado"
        echo "La pr√≥xima vez se ejecutar√° el contrato completo"
    else
        warning "No hay estado de inicializaci√≥n para resetear"
    fi
}

# Funci√≥n principal
main() {
    local command="${1:-execute}"
    
    case "$command" in
        "execute"|"init")
            # Verificar si ya se complet√≥
            if checkInitializationStatus; then
                echo ""
                echo "‚úÖ Inicializaci√≥n ya completada en sesi√≥n anterior"
                echo "   Cursor deber√≠a estar en caliente"
                echo ""
                echo "üîÑ Si necesitas reinicializar, usa:"
                echo "   ./scripts/auto-initialize-cursor.sh reset"
                echo "   ./scripts/auto-initialize-cursor.sh execute"
                echo ""
                return 0
            fi
            
            executeAutoInitialization
            ;;
        "check")
            if checkInitializationStatus; then
                echo "‚úÖ Estado de inicializaci√≥n verificado"
            else
                echo "‚ùå Inicializaci√≥n no completada"
                echo "   Ejecuta: ./scripts/auto-initialize-cursor.sh execute"
            fi
            ;;
        "reset")
            resetInitialization
            ;;
        "help"|*)
            showHelp
            ;;
    esac
}

# Ejecutar funci√≥n principal
main "$@"
