{
  "report_type": "real_test_runner",
  "timestamp": "2025-10-01T15:39:01.754Z",
  "tool_version": "2.0.0",
  "config": {
    "target_path": ".",
    "dry_run": false,
    "backup_enabled": true,
    "verbose": true
  },
  "results": {
    "applied": 0,
    "failed": 0,
    "skipped": 0,
    "total": 0
  },
  "data": {
    "test_files_dir": "./test-files",
    "test_scenarios": [
      "eslint",
      "prettier",
      "console-removal",
      "var-to-const"
    ],
    "test_files_count": 3,
    "total_scenarios": 4,
    "total_tests": 12,
    "successful_tests": 7,
    "failed_tests": 5,
    "test_results": [
      {
        "scenario": "eslint",
        "timestamp": "2025-10-01T15:38:54.278Z",
        "tests": [
          {
            "file": "test-file-1.js",
            "scenario": "eslint",
            "success": false,
            "error": "Comando falló después de 3 intentos: Comando falló: Command failed: npx eslint --fix \"test-files/test-file-1.js\"\nCommand failed: /Users/felipe/Developer/startkit-main/node_modules/.bin/eslint --fix,test-files/test-file-1.js\n",
            "beforeContent": "// Test file for real testing\nvar x = 1;\nvar y = 2;\nvar z = x + y;\n\nconsole.log(\"Sum:\", z);\n\nfunction badFunction() {\n  var temp = \"hello\";\n  console.log(temp);\n  return temp;\n}\n\n// Magic numbers\nsetTimeout(function() {\n  console.log(\"Timeout after 5000ms\");\n}, 5000);\n\n// Inconsistent quotes\nvar message = \"Hello world\";\nvar other = 'Another message';\n\n// Missing semicolons\nvar a = 1\nvar b = 2\n\n// Unused variable\nvar unused = \"not used\";\n\nbadFunction();\n",
            "afterContent": "",
            "changes": []
          },
          {
            "file": "test-file-2.js",
            "scenario": "eslint",
            "success": false,
            "error": "Comando falló después de 3 intentos: Comando falló: Command failed: npx eslint --fix \"test-files/test-file-2.js\"\nCommand failed: /Users/felipe/Developer/startkit-main/node_modules/.bin/eslint --fix,test-files/test-file-2.js\n",
            "beforeContent": "// Test file 2 for real testing\nvar data = {\n  name: \"test\",\n  value: 42\n};\n\nconsole.log(\"Data:\", data);\n\nfunction processData(input) {\n  var result = input * 2;\n  console.log(\"Result:\", result);\n  return result;\n}\n\n// More magic numbers\nvar timeout = 3000;\nsetTimeout(() => {\n  console.log(\"Another timeout\");\n}, timeout);\n\n// Inconsistent formatting\nvar obj={a:1,b:2,c:3};\n\nprocessData(21);\n",
            "afterContent": "",
            "changes": []
          },
          {
            "file": "test-file-3.js",
            "scenario": "eslint",
            "success": true,
            "error": null,
            "beforeContent": "// Test file 3 for real testing\nvar config = {\n  port: 3000,\n  host: \"localhost\"\n};\n\nconsole.log(\"Config:\", config);\n\n// Long function that should be refactored\nfunction veryLongFunctionThatDoesTooMuch() {\n  var step1 = \"first step\";\n  console.log(step1);\n  \n  var step2 = \"second step\";\n  console.log(step2);\n  \n  var step3 = \"third step\";\n  console.log(step3);\n  \n  var step4 = \"fourth step\";\n  console.log(step4);\n  \n  var step5 = \"fifth step\";\n  console.log(step5);\n  \n  var step6 = \"sixth step\";\n  console.log(step6);\n  \n  var step7 = \"seventh step\";\n  console.log(step7);\n  \n  var step8 = \"eighth step\";\n  console.log(step8);\n  \n  var step9 = \"ninth step\";\n  console.log(step9);\n  \n  var step10 = \"tenth step\";\n  console.log(step10);\n  \n  return step1 + step2 + step3 + step4 + step5 + step6 + step7 + step8 + step9 + step10;\n}\n\n// Magic numbers\nvar delay = 1000;\nsetTimeout(() => {\n  console.log(\"Delayed execution\");\n}, delay);\n\nveryLongFunctionThatDoesTooMuch();\n",
            "afterContent": "// Test file 3 for real testing\nvar config = {\n  port: 3000,\n  host: 'localhost'\n};\n\nconsole.log('Config:', config);\n\n// Long function that should be refactored\nfunction veryLongFunctionThatDoesTooMuch() {\n  var step1 = 'first step';\n  console.log(step1);\n\n  var step2 = 'second step';\n  console.log(step2);\n\n  var step3 = 'third step';\n  console.log(step3);\n\n  var step4 = 'fourth step';\n  console.log(step4);\n\n  var step5 = 'fifth step';\n  console.log(step5);\n\n  var step6 = 'sixth step';\n  console.log(step6);\n\n  var step7 = 'seventh step';\n  console.log(step7);\n\n  var step8 = 'eighth step';\n  console.log(step8);\n\n  var step9 = 'ninth step';\n  console.log(step9);\n\n  var step10 = 'tenth step';\n  console.log(step10);\n\n  return step1 + step2 + step3 + step4 + step5 + step6 + step7 + step8 + step9 + step10;\n}\n\n// Magic numbers\nvar delay = 1000;\nsetTimeout(() => {\n  console.log('Delayed execution');\n}, delay);\n\nveryLongFunctionThatDoesTooMuch();\n",
            "changes": [
              {
                "type": "modified",
                "line": 4,
                "before": "  host: \"localhost\"",
                "after": "  host: 'localhost'"
              },
              {
                "type": "modified",
                "line": 6,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 7,
                "before": "console.log(\"Config:\", config);",
                "after": "console.log('Config:', config);"
              },
              {
                "type": "modified",
                "line": 8,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 11,
                "before": "  var step1 = \"first step\";",
                "after": "  var step1 = 'first step';"
              },
              {
                "type": "modified",
                "line": 13,
                "before": "  ",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 14,
                "before": "  var step2 = \"second step\";",
                "after": "  var step2 = 'second step';"
              },
              {
                "type": "modified",
                "line": 16,
                "before": "  ",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 17,
                "before": "  var step3 = \"third step\";",
                "after": "  var step3 = 'third step';"
              },
              {
                "type": "modified",
                "line": 19,
                "before": "  ",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 20,
                "before": "  var step4 = \"fourth step\";",
                "after": "  var step4 = 'fourth step';"
              },
              {
                "type": "modified",
                "line": 22,
                "before": "  ",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 23,
                "before": "  var step5 = \"fifth step\";",
                "after": "  var step5 = 'fifth step';"
              },
              {
                "type": "modified",
                "line": 25,
                "before": "  ",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 26,
                "before": "  var step6 = \"sixth step\";",
                "after": "  var step6 = 'sixth step';"
              },
              {
                "type": "modified",
                "line": 28,
                "before": "  ",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 29,
                "before": "  var step7 = \"seventh step\";",
                "after": "  var step7 = 'seventh step';"
              },
              {
                "type": "modified",
                "line": 31,
                "before": "  ",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 32,
                "before": "  var step8 = \"eighth step\";",
                "after": "  var step8 = 'eighth step';"
              },
              {
                "type": "modified",
                "line": 34,
                "before": "  ",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 35,
                "before": "  var step9 = \"ninth step\";",
                "after": "  var step9 = 'ninth step';"
              },
              {
                "type": "modified",
                "line": 37,
                "before": "  ",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 38,
                "before": "  var step10 = \"tenth step\";",
                "after": "  var step10 = 'tenth step';"
              },
              {
                "type": "modified",
                "line": 40,
                "before": "  ",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 43,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 47,
                "before": "  console.log(\"Delayed execution\");",
                "after": "  console.log('Delayed execution');"
              },
              {
                "type": "modified",
                "line": 49,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 51,
                "before": "",
                "after": "[ELIMINADA]"
              }
            ]
          }
        ]
      },
      {
        "scenario": "prettier",
        "timestamp": "2025-10-01T15:39:01.039Z",
        "tests": [
          {
            "file": "test-file-1.js",
            "scenario": "prettier",
            "success": true,
            "error": null,
            "beforeContent": "// Test file for real testing\nvar x = 1;\nvar y = 2;\nvar z = x + y;\n\nconsole.log('Sum:', z);\n\nfunction badFunction() {\n  var temp = 'hello';\n  console.log(temp);\n  return temp;\n}\n\n// Magic numbers\nsetTimeout(function() {\n  console.log('Timeout after 5000ms');\n}, 5000);\n\n// Inconsistent quotes\nvar message = 'Hello world';\nvar other = 'Another message';\n\n// Missing semicolons\nvar a = 1;\nvar b = 2;\n\n// Unused variable\nvar unused = 'not used';\n\nbadFunction();\n",
            "afterContent": "// Test file for real testing\nvar x = 1;\nvar y = 2;\nvar z = x + y;\n\nconsole.log('Sum:', z);\n\nfunction badFunction() {\n  var temp = 'hello';\n  console.log(temp);\n  return temp;\n}\n\n// Magic numbers\nsetTimeout(function () {\n  console.log('Timeout after 5000ms');\n}, 5000);\n\n// Inconsistent quotes\nvar message = 'Hello world';\nvar other = 'Another message';\n\n// Missing semicolons\nvar a = 1;\nvar b = 2;\n\n// Unused variable\nvar unused = 'not used';\n\nbadFunction();\n",
            "changes": [
              {
                "type": "modified",
                "line": 5,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 7,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 13,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 15,
                "before": "setTimeout(function() {",
                "after": "setTimeout(function () {"
              },
              {
                "type": "modified",
                "line": 18,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 22,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 26,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 29,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 31,
                "before": "",
                "after": "[ELIMINADA]"
              }
            ]
          },
          {
            "file": "test-file-2.js",
            "scenario": "prettier",
            "success": true,
            "error": null,
            "beforeContent": "// Test file 2 for real testing\nvar data = {\n  name: 'test',\n  value: 42\n};\n\nconsole.log('Data:', data);\n\nfunction processData(input) {\n  var result = input * 2;\n  console.log('Result:', result);\n  return result;\n}\n\n// More magic numbers\nvar timeout = 3000;\nsetTimeout(() => {\n  console.log('Another timeout');\n}, timeout);\n\n// Inconsistent formatting\nvar obj = { a: 1,b: 2,c: 3 };\n\nprocessData(21);\n",
            "afterContent": "// Test file 2 for real testing\nvar data = {\n  name: 'test',\n  value: 42\n};\n\nconsole.log('Data:', data);\n\nfunction processData(input) {\n  var result = input * 2;\n  console.log('Result:', result);\n  return result;\n}\n\n// More magic numbers\nvar timeout = 3000;\nsetTimeout(() => {\n  console.log('Another timeout');\n}, timeout);\n\n// Inconsistent formatting\nvar obj = { a: 1, b: 2, c: 3 };\n\nprocessData(21);\n",
            "changes": [
              {
                "type": "modified",
                "line": 6,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 8,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 14,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 20,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 22,
                "before": "var obj = { a: 1,b: 2,c: 3 };",
                "after": "var obj = { a: 1, b: 2, c: 3 };"
              },
              {
                "type": "modified",
                "line": 23,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 25,
                "before": "",
                "after": "[ELIMINADA]"
              }
            ]
          },
          {
            "file": "test-file-3.js",
            "scenario": "prettier",
            "success": true,
            "error": null,
            "beforeContent": "// Test file 3 for real testing\nvar config = {\n  port: 3000,\n  host: 'localhost'\n};\n\nconsole.log('Config:', config);\n\n// Long function that should be refactored\nfunction veryLongFunctionThatDoesTooMuch() {\n  var step1 = 'first step';\n  console.log(step1);\n\n  var step2 = 'second step';\n  console.log(step2);\n\n  var step3 = 'third step';\n  console.log(step3);\n\n  var step4 = 'fourth step';\n  console.log(step4);\n\n  var step5 = 'fifth step';\n  console.log(step5);\n\n  var step6 = 'sixth step';\n  console.log(step6);\n\n  var step7 = 'seventh step';\n  console.log(step7);\n\n  var step8 = 'eighth step';\n  console.log(step8);\n\n  var step9 = 'ninth step';\n  console.log(step9);\n\n  var step10 = 'tenth step';\n  console.log(step10);\n\n  return step1 + step2 + step3 + step4 + step5 + step6 + step7 + step8 + step9 + step10;\n}\n\n// Magic numbers\nvar delay = 1000;\nsetTimeout(() => {\n  console.log('Delayed execution');\n}, delay);\n\nveryLongFunctionThatDoesTooMuch();\n",
            "afterContent": "// Test file 3 for real testing\nvar config = {\n  port: 3000,\n  host: 'localhost'\n};\n\nconsole.log('Config:', config);\n\n// Long function that should be refactored\nfunction veryLongFunctionThatDoesTooMuch() {\n  var step1 = 'first step';\n  console.log(step1);\n\n  var step2 = 'second step';\n  console.log(step2);\n\n  var step3 = 'third step';\n  console.log(step3);\n\n  var step4 = 'fourth step';\n  console.log(step4);\n\n  var step5 = 'fifth step';\n  console.log(step5);\n\n  var step6 = 'sixth step';\n  console.log(step6);\n\n  var step7 = 'seventh step';\n  console.log(step7);\n\n  var step8 = 'eighth step';\n  console.log(step8);\n\n  var step9 = 'ninth step';\n  console.log(step9);\n\n  var step10 = 'tenth step';\n  console.log(step10);\n\n  return (\n    step1 +\n    step2 +\n    step3 +\n    step4 +\n    step5 +\n    step6 +\n    step7 +\n    step8 +\n    step9 +\n    step10\n  );\n}\n\n// Magic numbers\nvar delay = 1000;\nsetTimeout(() => {\n  console.log('Delayed execution');\n}, delay);\n\nveryLongFunctionThatDoesTooMuch();\n",
            "changes": [
              {
                "type": "modified",
                "line": 6,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 8,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 13,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 16,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 19,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 22,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 25,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 28,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 31,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 34,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 37,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 40,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 41,
                "before": "  return step1 + step2 + step3 + step4 + step5 + step6 + step7 + step8 + step9 + step10;",
                "after": "  return ("
              },
              {
                "type": "modified",
                "line": 42,
                "before": "}",
                "after": "    step1 +"
              },
              {
                "type": "modified",
                "line": 43,
                "before": "",
                "after": "    step2 +"
              },
              {
                "type": "modified",
                "line": 44,
                "before": "// Magic numbers",
                "after": "    step3 +"
              },
              {
                "type": "modified",
                "line": 45,
                "before": "var delay = 1000;",
                "after": "    step4 +"
              },
              {
                "type": "modified",
                "line": 46,
                "before": "setTimeout(() => {",
                "after": "    step5 +"
              },
              {
                "type": "modified",
                "line": 47,
                "before": "  console.log('Delayed execution');",
                "after": "    step6 +"
              },
              {
                "type": "modified",
                "line": 48,
                "before": "}, delay);",
                "after": "    step7 +"
              },
              {
                "type": "modified",
                "line": 49,
                "before": "",
                "after": "    step8 +"
              },
              {
                "type": "modified",
                "line": 50,
                "before": "veryLongFunctionThatDoesTooMuch();",
                "after": "    step9 +"
              },
              {
                "type": "modified",
                "line": 51,
                "before": "",
                "after": "    step10"
              },
              {
                "type": "added",
                "line": 52,
                "before": "",
                "after": "  );"
              },
              {
                "type": "added",
                "line": 53,
                "before": "",
                "after": "}"
              },
              {
                "type": "added",
                "line": 54,
                "before": "",
                "after": ""
              },
              {
                "type": "added",
                "line": 55,
                "before": "",
                "after": "// Magic numbers"
              },
              {
                "type": "added",
                "line": 56,
                "before": "",
                "after": "var delay = 1000;"
              },
              {
                "type": "added",
                "line": 57,
                "before": "",
                "after": "setTimeout(() => {"
              },
              {
                "type": "added",
                "line": 58,
                "before": "",
                "after": "  console.log('Delayed execution');"
              },
              {
                "type": "added",
                "line": 59,
                "before": "",
                "after": "}, delay);"
              },
              {
                "type": "added",
                "line": 60,
                "before": "",
                "after": ""
              },
              {
                "type": "added",
                "line": 61,
                "before": "",
                "after": "veryLongFunctionThatDoesTooMuch();"
              },
              {
                "type": "added",
                "line": 62,
                "before": "",
                "after": ""
              }
            ]
          }
        ]
      },
      {
        "scenario": "console-removal",
        "timestamp": "2025-10-01T15:39:01.710Z",
        "tests": [
          {
            "file": "test-file-1.js",
            "scenario": "console-removal",
            "success": false,
            "error": null,
            "beforeContent": "// Test file for real testing\nvar x = 1;\nvar y = 2;\nvar z = x + y;\n\nconsole.log('Sum:', z);\n\nfunction badFunction() {\n  var temp = 'hello';\n  console.log(temp);\n  return temp;\n}\n\n// Magic numbers\nsetTimeout(function () {\n  console.log('Timeout after 5000ms');\n}, 5000);\n\n// Inconsistent quotes\nvar message = 'Hello world';\nvar other = 'Another message';\n\n// Missing semicolons\nvar a = 1;\nvar b = 2;\n\n// Unused variable\nvar unused = 'not used';\n\nbadFunction();\n",
            "afterContent": "// Test file for real testing\nvar x = 1;\nvar y = 2;\nvar z = x + y;\n\nconsole.log('Sum:', z);\n\nfunction badFunction() {\n  var temp = 'hello';\n  console.log(temp);\n  return temp;\n}\n\n// Magic numbers\nsetTimeout(function () {\n  console.log('Timeout after 5000ms');\n}, 5000);\n\n// Inconsistent quotes\nvar message = 'Hello world';\nvar other = 'Another message';\n\n// Missing semicolons\nvar a = 1;\nvar b = 2;\n\n// Unused variable\nvar unused = 'not used';\n\nbadFunction();\n",
            "changes": [
              {
                "type": "modified",
                "line": 5,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 7,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 13,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 18,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 22,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 26,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 29,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 31,
                "before": "",
                "after": "[ELIMINADA]"
              }
            ]
          },
          {
            "file": "test-file-2.js",
            "scenario": "console-removal",
            "success": false,
            "error": null,
            "beforeContent": "// Test file 2 for real testing\nvar data = {\n  name: 'test',\n  value: 42\n};\n\nconsole.log('Data:', data);\n\nfunction processData(input) {\n  var result = input * 2;\n  console.log('Result:', result);\n  return result;\n}\n\n// More magic numbers\nvar timeout = 3000;\nsetTimeout(() => {\n  console.log('Another timeout');\n}, timeout);\n\n// Inconsistent formatting\nvar obj = { a: 1, b: 2, c: 3 };\n\nprocessData(21);\n",
            "afterContent": "// Test file 2 for real testing\nvar data = {\n  name: 'test',\n  value: 42\n};\n\nconsole.log('Data:', data);\n\nfunction processData(input) {\n  var result = input * 2;\n  console.log('Result:', result);\n  return result;\n}\n\n// More magic numbers\nvar timeout = 3000;\nsetTimeout(() => {\n  console.log('Another timeout');\n}, timeout);\n\n// Inconsistent formatting\nvar obj = { a: 1, b: 2, c: 3 };\n\nprocessData(21);\n",
            "changes": [
              {
                "type": "modified",
                "line": 6,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 8,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 14,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 20,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 23,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 25,
                "before": "",
                "after": "[ELIMINADA]"
              }
            ]
          },
          {
            "file": "test-file-3.js",
            "scenario": "console-removal",
            "success": false,
            "error": null,
            "beforeContent": "// Test file 3 for real testing\nvar config = {\n  port: 3000,\n  host: 'localhost'\n};\n\nconsole.log('Config:', config);\n\n// Long function that should be refactored\nfunction veryLongFunctionThatDoesTooMuch() {\n  var step1 = 'first step';\n  console.log(step1);\n\n  var step2 = 'second step';\n  console.log(step2);\n\n  var step3 = 'third step';\n  console.log(step3);\n\n  var step4 = 'fourth step';\n  console.log(step4);\n\n  var step5 = 'fifth step';\n  console.log(step5);\n\n  var step6 = 'sixth step';\n  console.log(step6);\n\n  var step7 = 'seventh step';\n  console.log(step7);\n\n  var step8 = 'eighth step';\n  console.log(step8);\n\n  var step9 = 'ninth step';\n  console.log(step9);\n\n  var step10 = 'tenth step';\n  console.log(step10);\n\n  return (\n    step1 +\n    step2 +\n    step3 +\n    step4 +\n    step5 +\n    step6 +\n    step7 +\n    step8 +\n    step9 +\n    step10\n  );\n}\n\n// Magic numbers\nvar delay = 1000;\nsetTimeout(() => {\n  console.log('Delayed execution');\n}, delay);\n\nveryLongFunctionThatDoesTooMuch();\n",
            "afterContent": "// Test file 3 for real testing\nvar config = {\n  port: 3000,\n  host: 'localhost'\n};\n\nconsole.log('Config:', config);\n\n// Long function that should be refactored\nfunction veryLongFunctionThatDoesTooMuch() {\n  var step1 = 'first step';\n  console.log(step1);\n\n  var step2 = 'second step';\n  console.log(step2);\n\n  var step3 = 'third step';\n  console.log(step3);\n\n  var step4 = 'fourth step';\n  console.log(step4);\n\n  var step5 = 'fifth step';\n  console.log(step5);\n\n  var step6 = 'sixth step';\n  console.log(step6);\n\n  var step7 = 'seventh step';\n  console.log(step7);\n\n  var step8 = 'eighth step';\n  console.log(step8);\n\n  var step9 = 'ninth step';\n  console.log(step9);\n\n  var step10 = 'tenth step';\n  console.log(step10);\n\n  return (\n    step1 +\n    step2 +\n    step3 +\n    step4 +\n    step5 +\n    step6 +\n    step7 +\n    step8 +\n    step9 +\n    step10\n  );\n}\n\n// Magic numbers\nvar delay = 1000;\nsetTimeout(() => {\n  console.log('Delayed execution');\n}, delay);\n\nveryLongFunctionThatDoesTooMuch();\n",
            "changes": [
              {
                "type": "modified",
                "line": 6,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 8,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 13,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 16,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 19,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 22,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 25,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 28,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 31,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 34,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 37,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 40,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 54,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 60,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 62,
                "before": "",
                "after": "[ELIMINADA]"
              }
            ]
          }
        ]
      },
      {
        "scenario": "var-to-const",
        "timestamp": "2025-10-01T15:39:01.733Z",
        "tests": [
          {
            "file": "test-file-1.js",
            "scenario": "var-to-const",
            "success": true,
            "error": null,
            "beforeContent": "// Test file for real testing\nvar x = 1;\nvar y = 2;\nvar z = x + y;\n\nconsole.log('Sum:', z);\n\nfunction badFunction() {\n  var temp = 'hello';\n  console.log(temp);\n  return temp;\n}\n\n// Magic numbers\nsetTimeout(function () {\n  console.log('Timeout after 5000ms');\n}, 5000);\n\n// Inconsistent quotes\nvar message = 'Hello world';\nvar other = 'Another message';\n\n// Missing semicolons\nvar a = 1;\nvar b = 2;\n\n// Unused variable\nvar unused = 'not used';\n\nbadFunction();\n",
            "afterContent": "// Test file for real testing\nconst x = 1;\nconst y = 2;\nconst z = x + y;\n\nconsole.log('Sum:', z);\n\nfunction badFunction() {\n  const temp = 'hello';\n  console.log(temp);\n  return temp;\n}\n\n// Magic numbers\nsetTimeout(function () {\n  console.log('Timeout after 5000ms');\n}, 5000);\n\n// Inconsistent quotes\nconst message = 'Hello world';\nconst other = 'Another message';\n\n// Missing semicolons\nconst a = 1;\nconst b = 2;\n\n// Unused variable\nconst unused = 'not used';\n\nbadFunction();\n",
            "changes": [
              {
                "type": "modified",
                "line": 2,
                "before": "var x = 1;",
                "after": "const x = 1;"
              },
              {
                "type": "modified",
                "line": 3,
                "before": "var y = 2;",
                "after": "const y = 2;"
              },
              {
                "type": "modified",
                "line": 4,
                "before": "var z = x + y;",
                "after": "const z = x + y;"
              },
              {
                "type": "modified",
                "line": 5,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 7,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 9,
                "before": "  var temp = 'hello';",
                "after": "  const temp = 'hello';"
              },
              {
                "type": "modified",
                "line": 13,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 18,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 20,
                "before": "var message = 'Hello world';",
                "after": "const message = 'Hello world';"
              },
              {
                "type": "modified",
                "line": 21,
                "before": "var other = 'Another message';",
                "after": "const other = 'Another message';"
              },
              {
                "type": "modified",
                "line": 22,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 24,
                "before": "var a = 1;",
                "after": "const a = 1;"
              },
              {
                "type": "modified",
                "line": 25,
                "before": "var b = 2;",
                "after": "const b = 2;"
              },
              {
                "type": "modified",
                "line": 26,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 28,
                "before": "var unused = 'not used';",
                "after": "const unused = 'not used';"
              },
              {
                "type": "modified",
                "line": 29,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 31,
                "before": "",
                "after": "[ELIMINADA]"
              }
            ]
          },
          {
            "file": "test-file-2.js",
            "scenario": "var-to-const",
            "success": true,
            "error": null,
            "beforeContent": "// Test file 2 for real testing\nvar data = {\n  name: 'test',\n  value: 42\n};\n\nconsole.log('Data:', data);\n\nfunction processData(input) {\n  var result = input * 2;\n  console.log('Result:', result);\n  return result;\n}\n\n// More magic numbers\nvar timeout = 3000;\nsetTimeout(() => {\n  console.log('Another timeout');\n}, timeout);\n\n// Inconsistent formatting\nvar obj = { a: 1, b: 2, c: 3 };\n\nprocessData(21);\n",
            "afterContent": "// Test file 2 for real testing\nconst data = {\n  name: 'test',\n  value: 42\n};\n\nconsole.log('Data:', data);\n\nfunction processData(input) {\n  const result = input * 2;\n  console.log('Result:', result);\n  return result;\n}\n\n// More magic numbers\nconst timeout = 3000;\nsetTimeout(() => {\n  console.log('Another timeout');\n}, timeout);\n\n// Inconsistent formatting\nconst obj = { a: 1, b: 2, c: 3 };\n\nprocessData(21);\n",
            "changes": [
              {
                "type": "modified",
                "line": 2,
                "before": "var data = {",
                "after": "const data = {"
              },
              {
                "type": "modified",
                "line": 6,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 8,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 10,
                "before": "  var result = input * 2;",
                "after": "  const result = input * 2;"
              },
              {
                "type": "modified",
                "line": 14,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 16,
                "before": "var timeout = 3000;",
                "after": "const timeout = 3000;"
              },
              {
                "type": "modified",
                "line": 20,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 22,
                "before": "var obj = { a: 1, b: 2, c: 3 };",
                "after": "const obj = { a: 1, b: 2, c: 3 };"
              },
              {
                "type": "modified",
                "line": 23,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 25,
                "before": "",
                "after": "[ELIMINADA]"
              }
            ]
          },
          {
            "file": "test-file-3.js",
            "scenario": "var-to-const",
            "success": true,
            "error": null,
            "beforeContent": "// Test file 3 for real testing\nvar config = {\n  port: 3000,\n  host: 'localhost'\n};\n\nconsole.log('Config:', config);\n\n// Long function that should be refactored\nfunction veryLongFunctionThatDoesTooMuch() {\n  var step1 = 'first step';\n  console.log(step1);\n\n  var step2 = 'second step';\n  console.log(step2);\n\n  var step3 = 'third step';\n  console.log(step3);\n\n  var step4 = 'fourth step';\n  console.log(step4);\n\n  var step5 = 'fifth step';\n  console.log(step5);\n\n  var step6 = 'sixth step';\n  console.log(step6);\n\n  var step7 = 'seventh step';\n  console.log(step7);\n\n  var step8 = 'eighth step';\n  console.log(step8);\n\n  var step9 = 'ninth step';\n  console.log(step9);\n\n  var step10 = 'tenth step';\n  console.log(step10);\n\n  return (\n    step1 +\n    step2 +\n    step3 +\n    step4 +\n    step5 +\n    step6 +\n    step7 +\n    step8 +\n    step9 +\n    step10\n  );\n}\n\n// Magic numbers\nvar delay = 1000;\nsetTimeout(() => {\n  console.log('Delayed execution');\n}, delay);\n\nveryLongFunctionThatDoesTooMuch();\n",
            "afterContent": "// Test file 3 for real testing\nconst config = {\n  port: 3000,\n  host: 'localhost'\n};\n\nconsole.log('Config:', config);\n\n// Long function that should be refactored\nfunction veryLongFunctionThatDoesTooMuch() {\n  const step1 = 'first step';\n  console.log(step1);\n\n  const step2 = 'second step';\n  console.log(step2);\n\n  const step3 = 'third step';\n  console.log(step3);\n\n  const step4 = 'fourth step';\n  console.log(step4);\n\n  const step5 = 'fifth step';\n  console.log(step5);\n\n  const step6 = 'sixth step';\n  console.log(step6);\n\n  const step7 = 'seventh step';\n  console.log(step7);\n\n  const step8 = 'eighth step';\n  console.log(step8);\n\n  const step9 = 'ninth step';\n  console.log(step9);\n\n  const step10 = 'tenth step';\n  console.log(step10);\n\n  return (\n    step1 +\n    step2 +\n    step3 +\n    step4 +\n    step5 +\n    step6 +\n    step7 +\n    step8 +\n    step9 +\n    step10\n  );\n}\n\n// Magic numbers\nconst delay = 1000;\nsetTimeout(() => {\n  console.log('Delayed execution');\n}, delay);\n\nveryLongFunctionThatDoesTooMuch();\n",
            "changes": [
              {
                "type": "modified",
                "line": 2,
                "before": "var config = {",
                "after": "const config = {"
              },
              {
                "type": "modified",
                "line": 6,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 8,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 11,
                "before": "  var step1 = 'first step';",
                "after": "  const step1 = 'first step';"
              },
              {
                "type": "modified",
                "line": 13,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 14,
                "before": "  var step2 = 'second step';",
                "after": "  const step2 = 'second step';"
              },
              {
                "type": "modified",
                "line": 16,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 17,
                "before": "  var step3 = 'third step';",
                "after": "  const step3 = 'third step';"
              },
              {
                "type": "modified",
                "line": 19,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 20,
                "before": "  var step4 = 'fourth step';",
                "after": "  const step4 = 'fourth step';"
              },
              {
                "type": "modified",
                "line": 22,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 23,
                "before": "  var step5 = 'fifth step';",
                "after": "  const step5 = 'fifth step';"
              },
              {
                "type": "modified",
                "line": 25,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 26,
                "before": "  var step6 = 'sixth step';",
                "after": "  const step6 = 'sixth step';"
              },
              {
                "type": "modified",
                "line": 28,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 29,
                "before": "  var step7 = 'seventh step';",
                "after": "  const step7 = 'seventh step';"
              },
              {
                "type": "modified",
                "line": 31,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 32,
                "before": "  var step8 = 'eighth step';",
                "after": "  const step8 = 'eighth step';"
              },
              {
                "type": "modified",
                "line": 34,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 35,
                "before": "  var step9 = 'ninth step';",
                "after": "  const step9 = 'ninth step';"
              },
              {
                "type": "modified",
                "line": 37,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 38,
                "before": "  var step10 = 'tenth step';",
                "after": "  const step10 = 'tenth step';"
              },
              {
                "type": "modified",
                "line": 40,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 54,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 56,
                "before": "var delay = 1000;",
                "after": "const delay = 1000;"
              },
              {
                "type": "modified",
                "line": 60,
                "before": "",
                "after": "[ELIMINADA]"
              },
              {
                "type": "modified",
                "line": 62,
                "before": "",
                "after": "[ELIMINADA]"
              }
            ]
          }
        ]
      }
    ]
  }
}