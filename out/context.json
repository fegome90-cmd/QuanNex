{
  "schema_version": "1.0.0",
  "agent_version": "1.0.0",
  "context_bundle": "# Source: agents/README.md\n## Local Test Commands\n- Runtime outputs are created via `core/scripts/run-clean.sh <agent> payload.json` and stored in `out/` iff validation succeeds.\n\n# Source: agents/context/README.md\n## Purpose\n## Inputs\n## Outputs\n## Commands\n## Failure Modes\n- Source lists >50 or files >2MB -> hard failure.\n\n# Source: agents/prompting/README.md\n## Purpose\n## Inputs\n## Outputs\n## Commands\n## Failure Modes\n- Downstream failures (`prompting.server:error:*`) propagate with non-zero exit.\n\n# Source: agents/rules/README.md\n## Purpose\n## Inputs\n## Outputs\n## Commands\n## Failure Modes\n- Policies >2MB or directories -> hard failure with `rules.server:error` message.\n\n# Source: CLAUDE.md\n## Development Commands\n### CI/CD Commands\n- Include project-specific CLAUDE.md with relevant commands/agents\n- **Frontend**: React/TypeScript with Playwright testing, component creation commands\n- Comprehensive cleanup on interruption or failure\n- **Quality Gates (Jidoka)**: 5 gates (A-E) that stop execution on validation failures",
  "provenance": [
    "loaded:agents/README.md",
    "loaded:agents/context/README.md",
    "loaded:agents/prompting/README.md",
    "loaded:agents/rules/README.md",
    "loaded:CLAUDE.md"
  ],
  "stats": {
    "tokens_estimated": 256,
    "chunks": 5,
    "matched": 26,
    "truncated": false,
    "adjusted": false
  },
  "trace": [
    "context.server:ok"
  ]
}
